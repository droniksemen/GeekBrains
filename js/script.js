var admin = '';

var name = prompt('Введите свое имя: ');

admin = name;

alert("Здравствуйте, " + admin);

var tC = prompt(admin + ' задайте пожалуйста данные по Цельсию: ');

var formula = (9/5) * tC + 32;

alert('Температура по Фаренгейту равна: ' + formula);

alert('Чему будет равно выражение 1000 + "108" ?');

var a = 1000;
var b = '108';
var otvet = a + b;

alert('Выражение будет равно: ' + otvet);

var question = prompt('Про какой атрибут вы хотели бы узнать? Выберите цифру: 1 - async, 2 - defer; 3 - async и defer вместе');
if(question == 1){
	alert('Атрибут async. Поддерживается всеми браузерами, кроме IE9-. Скрипт выполняется полностью асинхронно. То есть, при обнаружении <script async src="..."> браузер не останавливает обработку страницы, а спокойно работает дальше. Когда скрипт будет загружен – он выполнится.');
}else if(question == 2){
	alert('Атрибут defer . Поддерживается всеми браузерами, включая самые старые IE. Скрипт также выполняется асинхронно, не заставляет ждать страницу, но есть два отличия от async. Первое – браузер гарантирует, что относительный порядок скриптов с defer будет сохранён. То есть, в таком коде (с async) первым сработает тот скрипт, который раньше загрузится: <script src="1.js" async></script> <script src="2.js" async></script> А в таком коде (с defer) первым сработает всегда 1.js, а скрипт 2.js, даже если загрузился раньше, будет его ждать. <script src="1.js" defer></script> <script src="2.js" defer></script> Поэтому атрибут defer используют в тех случаях, когда второй скрипт 2.js зависит от первого 1.js, к примеру – использует что-то, описанное первым скриптом. Второе отличие – скрипт с defer сработает, когда весь HTML-документ будет обработан браузером.Например, если документ достаточно большой… <script src="async.js" async></script> <script src="defer.js" defer></script> Много много много букв …То скрипт async.js выполнится, как только загрузится – возможно, до того, как весь документ готов. А defer.js подождёт готовности всего документа. Это бывает удобно, когда мы в скрипте хотим работать с документом, и должны быть уверены, что он полностью получен.');
}else if(question == 3){
	alert('async вместе с defer. При одновременном указании async и defer в современных браузерах будет использован только async, в IE9- – только defer (не понимает async).');
}else{
	alert('Необходимо было ввести цифру от 1 до 3, начинай сначала))');
}

